--TABLE CATEGORY_DISCOUNT_TOPUP REPRESENTS CATEGORY_DISCOUNT ENTITY
--TABLE PROMOTION_TOPUP REPRESENTS PROMOTION ENTITY
--TABLE PAYMENT_TOPUP REPRESENTS PAYMENT ENTITY

--CREATE TABLE CATEGORY_DISCOUNT_TOPUP
CREATE TABLE CATEGORY_DISCOUNT_TOPUP(
	CATEGORY_TYPES VARCHAR2(10) NOT NULL, #dah alter da
	CATEGORY_PERCENT NUMBER(2,2) NOT NULL,
	CONSTRAINT CATEGORY_DISCOUNT_PK PRIMARY KEY (CATEGORY_TYPES)
);

--CREATE TABLE PROMOTION_TOPUP
CREATE TABLE PROMOTION_TOPUP(
	PROMO_CODE VARCHAR2(5) NOT NULL,
	PROMO_DISCOUNT NUMBER(5,2) NOT NULL,
    PROMO_DESC VARCHAR2(100) NOT NULL,
	CONSTRAINT PROMOTION_PK PRIMARY KEY (PROMO_CODE)
);

--CREATE TABLE TOPUP
CREATE TABLE TOPUP(
	TOPUP_ID NUMBER(5) NOT NULL,
	CARD_ID INTEGER NOT NULL,
	TOPUP_AMOUNT NUMBER(5,2) NOT NULL,
	CATEGORY_TYPES VARCHAR2(10) NOT NULL,
	CONSTRAINT TOPUP_PK PRIMARY KEY (TOPUP_ID),
	CONSTRAINT TOPUP_CARD_FK FOREIGN KEY (CARD_ID)
	REFERENCES CARD (CARD_ID) ON DELETE CASCADE,
	CONSTRAINT CATEGORY_TOPUP_FK FOREIGN KEY (CATEGORY_TYPES)
	REFERENCES CATEGORY_DISCOUNT (CATEGORY_TYPES) ON DELETE CASCADE
);

--CREATE TABLE PAYMENT_TOPUP
CREATE TABLE PAYMENT_TOPUP(
	TOPUP_ID NUMBER(5) NOT NULL,
	PROMO_CODE VARCHAR2(5),
	PAYMENT_METHOD VARCHAR2(7) NOT NULL,
	CONSTRAINT PAYMENT_PK PRIMARY KEY (TOPUP_ID),
	CONSTRAINT TOPUP_PAYMENT_FK FOREIGN KEY (TOPUP_ID)
	REFERENCES TOPUP (TOPUP_ID),
	CONSTRAINT PROMO_PAYMENT_FK FOREIGN KEY (PROMO_CODE)
	REFERENCES PROMOTION_TOPUP (PROMO_CODE) ON DELETE CASCADE
);

--SEQUENCE AUTO NUMBER IN TOPUP_ID FOR TOPUPN TABLE
CREATE SEQUENCE SEQ_TOPUP_ID
START WITH 20373
INCREMENT BY 1
NOCACHE
NOCYCLE;

--SEQUENCE AUTO NUMBER IN TOPUP_ID FOR PAYMENT_TOPUP TABLE
CREATE SEQUENCE SEQ_TOPUP_ID_PAYMENT
START WITH 20373
INCREMENT BY 1
NOCACHE
NOCYCLE;

--TRIGGER TO INSERT AUTO NUMBER IN TOPUP_ID IN TOPUP TABLE
CREATE OR REPLACE TRIGGER TRG_TOPUP
BEFORE INSERT
ON TOPUP
FOR EACH ROW
BEGIN
:new.TOPUP_ID:=SEQ_TOPUP_ID.nextval;
END;

--TRIGGER TO INSERT AUTO NUMBER IN TOPUP_ID IN PAYMENT_TOPUP TABLE
CREATE OR REPLACE TRIGGER TRG_PAYMENT
BEFORE INSERT
ON PAYMENT_TOPUP
FOR EACH ROW
BEGIN
:new.TOPUP_ID:=SEQ_TOPUP_ID_PAYMENT.nextval;
END;